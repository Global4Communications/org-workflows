name: PHP CI (PR)

on:
  workflow_call:
    secrets:
      webservices_pat:
        required: true

jobs:
  check_php_files_changed:
    name: Check for changed PHP files
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.php_files_changed.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for changed PHP files
        id: php_files_changed
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} HEAD | grep php)
          CHANGED_COUNT=$(echo "$CHANGED_FILES" | wc -l)
          echo "changed=$CHANGED_COUNT" >> $GITHUB_OUTPUT
          echo "Changed PHP files:"
          echo "$CHANGED_FILES"

  check_config_files:
    name: Check for required config files
    runs-on: ubuntu-latest
    outputs:
      phpcs_xml_exists: ${{ steps.check_phpcs.outputs.phpcs_xml_exists }}
      phpstan_neon_exists: ${{ steps.check_phpstan.outputs.phpstan_neon_exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Check for phpcs.xml
        id: check_phpcs
        run: |
          if [ -f "phpcs.xml" ]; then
            echo "phpcs.xml found."
            echo "phpcs_xml_exists=1" >> $GITHUB_OUTPUT
          else
            echo "phpcs.xml not found."
            echo "phpcs_xml_exists=0" >> $GITHUB_OUTPUT
          fi
      - name: Check for phpstan.neon
        id: check_phpstan
        run: |
          if [ -f "phpstan.neon" ]; then
            echo "phpstan.neon found."
            echo "phpstan_neon_exists=1" >> $GITHUB_OUTPUT
          else
            echo "phpstan.neon not found."
            echo "phpstan_neon_exists=0" >> $GITHUB_OUTPUT
          fi

  composer_install:
    name: Composer Install
    runs-on: ubuntu-latest
    env:
      MANDRILL_APIKEY: "RANDOM_API_KEY"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Find php version from composer.json
        id: find_php_version
        run: |
          PHP_VERSION=$(jq -r '.require.php' composer.json)
          echo "PHP version found in composer.json: $PHP_VERSION"
          PHP_VERSION_MAJOR_MINOR=$(echo "$PHP_VERSION" | sed -E 's/^\^([0-9]+\.[0-9]+)\.0$/\1/')
          echo "PHP version: $PHP_VERSION_MAJOR_MINOR"
          echo "php_version=$PHP_VERSION_MAJOR_MINOR" >> $GITHUB_OUTPUT
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        env:
          GITHUB_TOKEN: ${{ secrets.webservices_pat }}
          COMPOSER_AUTH_JSON: '{"github-oauth": {"github.com": "${{ secrets.webservices_pat }}"}}'
        with:
          php-version: ${{ steps.find_php_version.outputs.php_version }}
          tools: composer, cs2pr
          extensions: mbstring, json, dom
      - name: Install dependencies
        run: |
          composer config --global github-protocols https
          composer install --prefer-dist --no-interaction --no-progress
      - name: Upload vendor directory as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vendor-dependencies
          path: vendor
          retention-days: 1 # Minimum value

  phpcs:
    name: PHP_CodeSniffer
    needs: [check_php_files_changed, check_config_files]
    runs-on: ubuntu-latest
    if: needs.check_php_files_changed.outputs.changed != '0' && needs.check_config_files.outputs.phpcs_xml_exists == '1'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          tools: phpcs, cs2pr, composer
          extensions: mbstring, json, dom
      - name: config output
        run: cat phpcs.xml
      - name: Run PHP_CodeSniffer (Errors only)
        run: phpcs --standard=phpcs.xml --warning-severity=0 --report=checkstyle $(git diff --name-only --diff-filter=AM origin/${{ github.event.pull_request.base.ref }} HEAD | grep php | tr '\n' ' ') | cs2pr

  phpstan:
    name: PHPStan
    needs: [check_php_files_changed, check_config_files, composer_install]
    runs-on: ubuntu-latest
    if: needs.check_php_files_changed.outputs.changed != '0' && needs.check_config_files.outputs.phpstan_neon_exists == '1'
    env:
      MANDRILL_APIKEY: "RANDOM_API_KEY"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Find php version from composer.json
        id: find_php_version
        run: |
          PHP_VERSION=$(jq -r '.require.php' composer.json)
          echo "PHP version found in composer.json: $PHP_VERSION"
          PHP_VERSION_MAJOR_MINOR=$(echo "$PHP_VERSION" | sed -E 's/^\^([0-9]+\.[0-9]+)\.0$/\1/')
          echo "PHP version: $PHP_VERSION_MAJOR_MINOR"
          echo "php_version=$PHP_VERSION_MAJOR_MINOR" >> $GITHUB_OUTPUT
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.find_php_version.outputs.php_version }}
          tools: phpstan:1.12, composer, cs2pr
          extensions: mbstring, json, dom
      - name: Download vendor artifact
        uses: actions/download-artifact@v4
        with:
          name: vendor-dependencies
          path: vendor
      - name: config output
        run: cat phpstan.neon
      - name: Run PHPStan analysis
        run: phpstan analyse --no-progress --no-interaction --memory-limit=512M --configuration=phpstan.neon --error-format=checkstyle -vvv | cs2pr
