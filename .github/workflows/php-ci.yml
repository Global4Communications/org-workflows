name: PHP CI (PR)

on:
  workflow_call:
    secrets:
      webservices_pat:
        required: true

jobs:
  check_php_files_changed:
    name: Check for changed PHP files
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.php_files_changed.outputs.changed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for changed PHP files
        id: php_files_changed
        run: |
          CHANGED_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }} HEAD | grep php)
          CHANGED_COUNT=$(echo "$CHANGED_FILES" | wc -l)
          echo "changed=$CHANGED_COUNT" >> $GITHUB_OUTPUT
          echo "Changed PHP files:"
          echo "$CHANGED_FILES"

  detect_php_version:
    name: Detect PHP Version
    runs-on: ubuntu-latest
    outputs:
      php_version: ${{ steps.find_php_version.outputs.php_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Find php version from composer.json
        id: find_php_version
        run: |
          PHP_VERSION=$(jq -r '.require.php' composer.json)
          echo "PHP version found in composer.json: $PHP_VERSION"
          PHP_VERSION_MAJOR_MINOR=$(echo "$PHP_VERSION" | sed -E 's/^\^([0-9]+\.[0-9]+)\.0$/\1/')
          echo "PHP version (major.minor): $PHP_VERSION_MAJOR_MINOR"
          echo "php_version=$PHP_VERSION_MAJOR_MINOR" >> $GITHUB_OUTPUT

  phpcs:
    name: PHP_CodeSniffer
    needs: [check_php_files_changed]
    runs-on: ubuntu-latest
      if: needs.check_php_files_changed.outputs.changed != '0'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
        fetch-depth: 0
      - name: Check for config file
        run: |
            if [ ! -f "phpcs.xml" ]; then
              echo "Config file not found, skipping job"
              exit 0
            else
              echo "Config file found"
            fi
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          tools: phpcs, cs2pr, composer
          extensions: mbstring, json, dom
      - name: config output
        run: cat phpcs.xml
      - name: Run PHP_CodeSniffer (Errors only)
        run: phpcs --standard=phpcs.xml --warning-severity=0 --report=checkstyle $(git diff --name-only --diff-filter=AM origin/${{ github.event.pull_request.base.ref }} HEAD | grep php | tr '\n' ' ') | cs2pr

  phpstan:
    name: PHPStan
    needs: [check_php_files_changed, detect_php_version]
    runs-on: ubuntu-latest
    if: needs.check_php_files_changed.outputs.changed != '0'
    env:
      MANDRILL_APIKEY: "RANDOM_API_KEY"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for config file
        run: |
            if [ ! -f "phpstan.neon" ]; then
              echo "Config file not found, skipping job"
              exit 0
            else
              echo "Config file found"
            fi
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        env:
          GITHUB_TOKEN: ${{ secrets.webservices_pat }}
          COMPOSER_AUTH_JSON: '{"github-oauth": {"github.com": "${{ secrets.webservices_pat }}"}}'
        with:
          php-version: ${{ steps.detect_php_version.outputs.php_version }}
          tools: phpstan:1.12, composer, cs2pr
          extensions: mbstring, json, dom
      - name: Install dependencies
        run: |
          composer config --global github-protocols https
          composer install --prefer-dist --no-interaction --no-progress
      - name: config output
        run: cat phpstan.neon
      - name: Run PHPStan analysis
        run: phpstan analyse --no-progress --no-interaction --memory-limit=512M --configuration=phpstan.neon --error-format=checkstyle -vvv | cs2pr

  behat:
    name: Behat
    needs: [check_php_files_changed, detect_php_version]
    runs-on: ubuntu-latest
    if: needs.check_php_files_changed.outputs.changed != '0'
    env:
      MANDRILL_APIKEY: "RANDOM_API_KEY"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for behat.yml
        run: |
            if [ ! -f "behat.yml" ]; then
              echo "Config file not found, skipping job"
              exit 0
            else
              echo "Config file found"
            fi
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WEBSERVICES_PAT }}
          COMPOSER_AUTH_JSON: '{"github-oauth": {"github.com": "${{ secrets.WEBSERVICES_PAT }}"}}'
        with:
          php-version: ${{ steps.detect_php_version.outputs.php_version }}
          tools: composer
          extensions: mbstring, json, dom
      - name: Composer install
        run: |
          composer config --global github-protocols https
          composer install --prefer-dist --no-interaction --no-progress
      - name: Prepare Laravel app for testing
        run: |
          cp .env.example .env
          php artisan key:generate --force
      - name: Run Behat tests
        run: |
          vendor/bin/behat

  phpunit:
    name: PHPUnit
    needs: [check_php_files_changed, detect_php_version]
    runs-on: ubuntu-latest
    if: needs.check_php_files_changed.outputs.changed != '0'
    env:
      MANDRILL_APIKEY: "RANDOM_API_KEY"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check for phpunit.xml
        run: |
            if [ ! -f "phpunit.xml" ]; then
              echo "Config file not found, skipping job"
              exit 0
            else
              echo "Config file found"
            fi
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        env:
          GITHUB_TOKEN: ${{ secrets.WEBSERVICES_PAT }}
          COMPOSER_AUTH_JSON: '{"github-oauth": {"github.com": "${{ secrets.WEBSERVICES_PAT }}"}}'
        with:
          php-version: ${{ steps.detect_php_version.outputs.php_version }}
          tools: composer, phpunit
          extensions: mbstring, json, dom
      - name: Install Behat and project dependencies
        run: |
          composer config --global github-protocols https
          composer install --prefer-dist --no-interaction --no-progress
      - name: Prepare Laravel app for testing
        run: |
          cp .env.example .env
          php artisan key:generate --force
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - name: Run PHPUnit
        run: |
          vendor/bin/phpunit --configuration phpunit.xml
